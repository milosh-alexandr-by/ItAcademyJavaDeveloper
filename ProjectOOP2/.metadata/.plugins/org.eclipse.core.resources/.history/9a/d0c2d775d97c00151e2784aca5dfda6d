/*
 * Таксопарк, который содержит автомобили (7 штук).
 * Выводится на экран стоимость таксопарка.
 * Таксопарк сортируется по расходу топлива и по цене автомобиля.
 */
import java.util.*;

public class TaxiStation {

	public static void main(String[] args) {
		
// Список (коллекция ArrayList)	автомобилей таксопарка.	
		ArrayList<TaxiCars> taxiCarsList = new ArrayList<TaxiCars>();
		taxiCarsList.add(new TaxiCars("VW", "Passat B6", 1.8, 8.1, 2008, 11000));
		taxiCarsList.add(new TaxiCars("Toyota", "Camry", 2.5, 9.7, 2010, 13700));
		taxiCarsList.add(new TaxiCars("Hyundai", "Sonata", 2.0, 8.0, 2014, 17700));
		taxiCarsList.add(new TaxiCars("Kia", "Rio", 1.6, 7.5, 2015, 1000));
		taxiCarsList.add(new TaxiCars("Ford", "Mondeo", 1.6, 8.6, 2010, 9400));
		taxiCarsList.add(new TaxiCars("Opel", "Astra", 1.6, 8.1, 2010, 8300));
		taxiCarsList.add(new TaxiCars("Mazda", "6", 2.0, 8.2, 2013, 17600));
		
// 	Вывести на экран стоимость таксопарка.	
		TaxiCars.costOfTaxiStation(taxiCarsList);
		
// Вывести на экран таксопарк с помощью for each.		
		for (TaxiCars ob : taxiCarsList) {
			System.out.println(ob);
		}
	
// 	Сортировка по расходу топлива.	
		TaxiCars.SortedByFuelConsumption(taxiCarsList);
		
		System.out.println();
//	     Iterator itr = taxiCarsList.iterator();
//	      while(itr.hasNext()) {
//	         Object element = itr.next();
//	         System.out.println(element);
//	      }
	      
	      TaxiCars.printTaxiStation(taxiCarsList);
			
// Сортировка по цене.		
		Collections.sort(taxiCarsList,	new SortedByPrice() );	
		
//		System.out.println();
//		for (TaxiCars ob : taxiCarsList) {
//			System.out.println(ob);
//		}
		
		
	      TaxiCars.printTaxiStation(taxiCarsList);
		
	}

}
